JavaScript does not have classes in the same sense as other object-oriented languages like Java or Ruby. ES6, however, did introduce a syntax for object creation that uses the class keyword. It is basically a new syntax that does the exact same thing as the object constructors and prototypes we learned about in the constructor lesson.

Historically, especially when ES6 was released, there was some controversy with class syntax precisely because it looks liek classes from languages like Java, but in reality is only syntactic sugar over constructors and prototypes. The underlying mechanisms have not changed despite the different syntax (no classical inheritance going on) but often trips people up since the syntax isn't as explicit about what's really going on with these objects.

Plenty of time has passed though and class syntax now exists in many code bases. There aren't many new mechanisms to lean here, mainly just new syntax for mostly familiar concepts.

Resources

    https://javascript.info/property-accessors
    https://javascript.info/class
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/extends
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/Private_class_fields
    https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/static

Additional Resources

    https://www.youtube.com/playlist?list=PLtwj5TTsiP7uTKfTQbcmb59mWXosLP_7S
    https://www.w3resource.com/javascript-exercises/oop/index.php