Static and relative positioning

    The default positioning mode that you've gotten used to is position: static. The difference between static and relative is fairly simple. Static is the default position of every element, and properties top, right, bottom, and left do not affect the position of the element. Relative on the other hand is pretty much the same as static, but properties top, right...(etc.) displace the element relative to its normal position in the flow of the document.

Absolute positioning

    position: absolute allows you to position something at an exact point on the screen without disturbing the other elements around it. More specifically, using absolute positioning on an element will remove that element from the normal document flow while being positioned relative to an ancestor element. To put it in other words: elements that are removed from the normal flow of the document don't affect other elements and are also not affected by other elements. Using absolute positioning allows you to position elements anywhere on the screen using top, right, bottom, and left properties. This property is really useful when you want to position something at an exact point on the screen, without disturbing any of the other elements. A couple of good use cases for absolute positioning are:

        - modals
        - image with a caption on it
        - icons on top of other elements

    In the following example, we are using absolute positioning to display text over an image.

        .card-container {
            position: relative;
            width: 100%
        }
        .card-image {
            position: absolute;
            width: 100%;
            z-index: -1;
        }
        .card-body {
            position: absolute;
            width: 100%;
            background: black;
            opacity: 0.6;
            color: white;
            top: 8rem;
            text-align: center;
            font-size: 1.2em;
            font-family: roboto;
        }
        .card-heading {
            position: absolute;
        }

    Disclaimer: absolute positioning has very specific use cases and if possible, using flexbox or grid should be prioritized. Absolute positioning shouldn't be used to do entire page layouts.

Fixed positioning

    Fixed elements are also removed from the normal flow of the document and are positioned relative to the viewport. You basically use top, right, bottom, and left properties to position it, and it will stay there as the user scrolls. This is especially useful for things like navigation bars and floating chat buttons.

Sticky positioning

    Sticky elements will act like normal elements until you scroll past them, then they start behaving like fixed elements. They are also not taken out of the normal flow of the document. It might sound confusing, so check out this sticky positioning example (https://codepen.io/theanam/pen/MPLBYy) that might clear things up for you. It's useful for things like section-headings. Remember being able to still see what category you're looking at while scrolling through a shop? This is how it's done!

Notes

    position

        static 

            Follows normal document flow, can't be affected by top, left, right, bottom.

        relative

            Does not follow normal document flow, but can be affected by top, left, right, bottom.

        absolute

            Does not follow normal document flow, will stay exactly where top, left, right, bottom says it will

            Its best use case is to have absolute elements inside of a relative parent. That way you can absolutely position them where they need to be inside, while still remaining in its parent container, not going all over the place in the document.

        fixed

            It's absolute but actually keeps showing regardless of scroll.

        sticky

            A mix of relative and fixed, it behaves like relative, staying inside its parent, but once scrolling down / up enough, will become fixed and keep showing on screen.
        

Resources

    https://www.youtube.com/watch?v=jx5jmI0UlXU
    https://developer.mozilla.org/en-US/docs/Web/CSS/position
    https://css-tricks.com/absolute-relative-fixed-positioining-how-do-they-differ/
    https://www.kevinpowell.co/article/positition-fixed-vs-sticky/

Additional Resources

    https://www.makeuseof.com/css-position-property-practical-examples/
    https://www.youtube.com/watch?v=MxEtxo_AaZ4&t=2s